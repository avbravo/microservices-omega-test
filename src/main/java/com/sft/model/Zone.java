/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.sft.model;

import com.jmoordb.core.annotation.Column;
import com.jmoordb.core.annotation.Embedded;
import com.jmoordb.core.annotation.Entity;
import com.jmoordb.core.annotation.Id;
import com.jmoordb.core.annotation.Referenced;
import com.jmoordb.core.annotation.enumerations.AutogeneratedActive;
import java.util.List;
import java.util.Objects;

/**
 *
 * @author avbravo
 */
@Entity()
public class Zone {
      @Id(autogeneratedActive = AutogeneratedActive.ON)
    private Long idzone;
    @Column
    private Boolean active;
    
    @Referenced(from = "building", localField = "idbuilding")
    private Building building;
    @Column
    private String descripcion;
    @Column
    private String icon;
  
    @Column
    private String zone;

       @Embedded
List<ActionHistory> actionHistory;
    public Zone() {
    }

    public Zone(Long idzone, Boolean active, Building building, String descripcion, String icon, String zone, List<ActionHistory> actionHistory) {
        this.idzone = idzone;
        this.active = active;
        this.building = building;
        this.descripcion = descripcion;
        this.icon = icon;
        this.zone = zone;
        this.actionHistory = actionHistory;
    }

    public Long getIdzone() {
        return idzone;
    }

    public void setIdzone(Long idzone) {
        this.idzone = idzone;
    }

    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Building getBuilding() {
        return building;
    }

    public void setBuilding(Building building) {
        this.building = building;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public String getIcon() {
        return icon;
    }

    public void setIcon(String icon) {
        this.icon = icon;
    }

    public String getZone() {
        return zone;
    }

    public void setZone(String zone) {
        this.zone = zone;
    }

    public List<ActionHistory> getActionHistory() {
        return actionHistory;
    }

    public void setActionHistory(List<ActionHistory> actionHistory) {
        this.actionHistory = actionHistory;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Zone{");
        sb.append("idzone=").append(idzone);
        sb.append(", active=").append(active);
        sb.append(", building=").append(building);
        sb.append(", descripcion=").append(descripcion);
        sb.append(", icon=").append(icon);
        sb.append(", zone=").append(zone);
        sb.append(", actionHistory=").append(actionHistory);
        sb.append('}');
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 47 * hash + Objects.hashCode(this.idzone);
        hash = 47 * hash + Objects.hashCode(this.active);
        hash = 47 * hash + Objects.hashCode(this.building);
        hash = 47 * hash + Objects.hashCode(this.descripcion);
        hash = 47 * hash + Objects.hashCode(this.icon);
        hash = 47 * hash + Objects.hashCode(this.zone);
        hash = 47 * hash + Objects.hashCode(this.actionHistory);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Zone other = (Zone) obj;
        if (!Objects.equals(this.descripcion, other.descripcion)) {
            return false;
        }
        if (!Objects.equals(this.icon, other.icon)) {
            return false;
        }
        if (!Objects.equals(this.zone, other.zone)) {
            return false;
        }
        if (!Objects.equals(this.idzone, other.idzone)) {
            return false;
        }
        if (!Objects.equals(this.active, other.active)) {
            return false;
        }
        if (!Objects.equals(this.building, other.building)) {
            return false;
        }
        return Objects.equals(this.actionHistory, other.actionHistory);
    }

   
    
}
